#!/usr/bin/perl -w
use strict;
use Getopt::Long;
my $BASEDIRECTORY   = "/etc/sysconfig";
my $IPTABLES_D      = "iptables.d";
my $IPTABLES_CONFIG = 'iptables';
my $RELOAD;
GetOptions(
    "r"   => \$RELOAD,
    "d=s" => \$BASEDIRECTORY,
);

## This globs tells us which rules to apply

##
open( FILEOUT, ">", "$BASEDIRECTORY/$IPTABLES_CONFIG" ) or die "out file sucks";
## This is a useful comment
printf FILEOUT
"#generated by $0.\n#iptables-save, service iptables save, or manual overwrites will be lost\n";
## now we start our filters.
open( FILTERS_FILEIN, "<", "$BASEDIRECTORY/$IPTABLES_D/default_filters.def" )
  or die "in file sucks";
print FILEOUT "*filter\n";

while (<FILTERS_FILEIN>) {
    if ( $_ !~ /^#/ ) { printf FILEOUT; }
}
close FILTERS_FILEIN;
&strip_rules_file('FILTER');
open( DEF_RULES_FILEIN, "<", "$BASEDIRECTORY/$IPTABLES_D/default_rules.def" )
  or die "in file sucks";
while (<DEF_RULES_FILEIN>) {
    if ( $_ !~ /^#/ ) { printf FILEOUT; }
}
close DEF_RULES_FILEIN;
&strip_rules_file('JUMP');
printf FILEOUT "-A INPUT -j DROP\n";
my @global_accepts = &get_accpets('global_accepts');
my @rules_files    = glob "$BASEDIRECTORY/$IPTABLES_D/*.rules";
for my $filename (@rules_files) {
    my $resource_name;
    open( ACCEPT_HANDLE, "<", $filename );
    while (<ACCEPT_HANDLE>) {
        if ( $_ =~ /FILTER/ ) {
            my @split = split( "=", $_ );
            $split['1'] =~ /(\W+)(\w+)(.*)/;
            $resource_name = $2;
            last;
        }
    }
    close ACCEPT_HANDLE;
    my @file_accepts = &get_accpets("$resource_name");
    my @merged_array = ( @file_accepts, @global_accepts );
    for (@merged_array) {
        chomp;
        printf FILEOUT "-A $resource_name -s $_ -j ACCEPT\n";
    }
    my @LOG = &strip_rule_line( "$filename", "LOG" );
    for (@LOG) { print FILEOUT "$_\n"; }
    my @DROP = &strip_rule_line( "$filename", "DROP" );
    for (@DROP) { print FILEOUT "$_\n"; }
}
printf FILEOUT "COMMIT\n";
close FILEOUT;
if ($RELOAD) { &iptables_reload() }

sub get_accpets() {
    my @return_array;
    my $basename = shift;
    my @FILE_TYPES = ( 'local.acpts', 'acpts' );
    for (@FILE_TYPES) {
        my $FILENAME = "$BASEDIRECTORY/$IPTABLES_D/${basename}.$_";
        if ( -f $FILENAME ) {
            open( FILEIN, "<", "$FILENAME" ) or die "global accpt sucks";
            while (<FILEIN>) {
                chomp;
                $return_array[ ++$#return_array ] = $_;
            }
            close FILEIN;
        }
    }
    return @return_array;
}
## get all filters, filter should be a definition in the rules file for the service.
sub strip_rules_file() {
    my @sub_rules_files = glob "$BASEDIRECTORY/$IPTABLES_D/*.rules";
    my $stripper        = shift;
    for (@sub_rules_files) {
        open( SUB_HANDLE, "<", $_ );
        while (<SUB_HANDLE>) {
            if ( $_ =~ /$stripper/ ) {
                my @split = split( "=", $_ );
                $split['1'] =~ /(^[: ]*)(.*)/;
                if ( $stripper eq 'FILTER' ) {
                    print FILEOUT ":$2\n";
                }
                else {
                    print FILEOUT "$2\n";
                }    # end if stripper FILTER
            }    # end if $_
        }    # end while
    }    # end for
    close SUB_HANDLE;
}    # end sub

sub strip_rule_line() {
## A good perl scripter would merge this with script_rules_files()
    my $filename = shift;
    my $stripper = shift;
    my @return_array;
    open( SUB_HANDLE, "<", $filename );
    while (<SUB_HANDLE>) {
        if ( $_ =~ /$stripper/ ) {
            my @split = split( "=", $_ );
            $split['1'] =~ /(^[ ])(.*)/;
            push @return_array, $2;
        }    # end if $_
    }    # end while
    close SUB_HANDLE;
    return @return_array;
}

sub iptables_reload() {
    my @iptables_reload = ( '/sbin/service', 'iptables', 'reload' );
    system(@iptables_reload);
}
